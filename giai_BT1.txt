//Bai 1
public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] A = {5,3,8,2,6,7,6,8,8,3};
		int[] vt = new int[A.length];
		
		//Tim max
		int max = A[0];
		int i = 1;
		while (i < A.length) {
			if (A[i] > max) {
				max = A[i];
			}
			i++;
		}
		
		//Tim vi tri va so luong = max
		i = 0;
		int x = 0, soluong = 0;
		while (i < A.length) {
			if (A[i] == max) {
				soluong++;
				vt[x] = i;
				x++;
			}
			i++;
		}
		
		//hien thi ket qua
		i = 0;
		if (soluong > 1) {
			System.out.println("Max = " + max);
			System.out.println("So luong = " + soluong);
			System.out.print("Cac vi tri: ");
			while(i < soluong) {
				System.out.print(vt[i] + "	");
				i++;
			}
		} else {
			System.out.println("Max = " + max);
		}
	}

//Bai 2
//2.1
public static void bai2_1(int[] A) {
		int i = 0;
		int max_length = 1;
		int i_start = 0;
		while (max_length + i <= A.length) {
			int length = 1, j = i;
			while (j < A.length - 1 && A[j + 1] > A[j]) {
				length++;
				j++;
			}
			if (length > max_length) {
				max_length = length;
				i_start = i;
			}
			i++;
		}
		System.out.println("vi tri dau: " + (i_start + 1));
		System.out.println("vi tri cuoi: " + (i_start + max_length));
	}

//2.2
public static void bai2_2(int[] A) {
		int i = 0, x = 0; // x la so doan con tang dan co chieu dai max
		int max_length = 1;
		int[] i_start = new int[A.length];
		while (max_length + i <= A.length) {
			int length = 1, j = i;
			while (j < A.length - 1 && A[j + 1] > A[j]) {
				length++;
				j++;
			}
			if (length > max_length) {
				max_length = length;
				i_start[0] = i;
				x = 1;
			} else if (length == max_length) {
				i_start[x] = i;
				x++;
			}
			i++;
		}
		// hien thi ket qua
		System.out.println("so doan = " + x);
		System.out.println("do dai doan = " + max_length);
		i = 0;
		while (i < x) {
			System.out.println("dau: " + (i_start[i] + 1) + " cuoi " + (i_start[i] + max_length));
			i++;
		}
	}

//Bai 3
public static void main(String[] args) {
        // TODO Auto-generated method stub

        int[] A = {4, 6, 9, 10, 17, 22};
        int x = 7;
        A[A.length - 1] = x;
        for (int i = A.length - 1; i > 0; i--) {
            if (x > A[i-1]) {
                break;
            } else {
                A[i] = A[i-1];
                A[i-1] = x;
            }
        }
        for(int i = 0; i < A.length; i++) {
            System.out.print(A[i] + " ");
        }
    }

//Bai 4
public static void main(String[] args) {
		int[] A = { 1, 3, 5, 7, 8, 11, 13, 17, 19, 20, 21 };
		int x = 17;
		int l_flag = 0, r_flag = A.length - 1, mid = 0;
		boolean ck = false;
		while (l_flag != r_flag) {
			mid = (l_flag + r_flag) / 2;
			if (A[mid] == x) {
				ck = true;
				break;
			} else if (x < A[mid]) {
				r_flag = mid - 1;
			} else { // x > A[vt]
				l_flag = mid + 1;
			}
		}
		if (ck) {
			System.out.println("Vi tri cua x = " + x + " trong mang la: " + mid);
		} else {
			if (A[l_flag] == x) {
				System.out.println("Vi tri cua x = " + x + " trong mang la: " + l_flag);
			} else {
				System.out.println("x = " + x + " khong co trong mang");
			}
		}
	}

//Bai 5
public static void main(String[] args) {
		int[] A = {3,5,6,2,6,7,2,9,3};
		//tim max, min
		int min = A[0], max = A[0], i_min = 0, i_max = 0;
		for (int i = 1; i < A.length; i++) {
			if (A[i] < min) {
				min = A[i];
				i_min = i;
			}
			if (A[i] > max) {
				max = A[i];
				i_max = i;
			}
		}
		
		//doi vi tri min max
		int temp = A[i_min];
		A[i_min] = A[i_max];
		A[i_max] = temp;
		//Hien thi mang sau khi bien doi
		System.out.print("mang sau khi bien doi: ");
		for (int i = 0; i < A.length; i++) {
			System.out.print(A[i] + "	");
		}
	}


//Xau ki tu
//1
public String xoaDauCachThua(String s) {
		StringBuffer rs = new StringBuffer();
		StringTokenizer stknz = new StringTokenizer(s);
		while (stknz.hasMoreElements()) {
			rs.append(stknz.nextToken() + " ");
		}
		return rs.deleteCharAt(rs.length() - 1).toString();
	}

//2
// rs[0] tra ve ho, rs[1] tra ve ten dem, rs[2] tra ve ten, neu ko dung cau truc ho dem ten tra ve null
	public String[] tachHoDemTen(String hodemten) {
		StringTokenizer stknz = new StringTokenizer(hodemten);
		if (stknz.countTokens() < 3) { // ko dung cau truc ho dem ten
			return null;
		}
		String[] rs = new String[3];
		int i = 1;
		rs[0] = stknz.nextToken();
		rs[1] = "";
		while (stknz.hasMoreElements() && i < stknz.countTokens()) {
			rs[1] = rs[1] + stknz.nextToken() + " ";
		}
		rs[1] = rs[1].trim();
		rs[2] = stknz.nextToken();
		return rs;
	}

//3____ Tra ve mang cac tu co do dai lon nhat trong cau
public String[] tuDaiNhatTrongCau(String s) {
		StringTokenizer stknz = new StringTokenizer(s);
		String[] mang = new String[stknz.countTokens()];
		int max_length = mang[0].length();
		// tim tu co do dai dai nhat
		int n = 1;
		for (String temp : mang) {
			if (temp.length() > max_length) {
				max_length = temp.length();
				n = 1;
			} else if (temp.length() == max_length) {
				n++;
			}
		}
		String[] rs = new String[n];
		int i = 0;
		for (String temp : mang) {
			if (temp.length() == max_length) {
				rs[i] = temp;
			}
		}
		return rs;
	}

//4
public int findName(String[] listName, String findName) {
		int rs = 0;
		for (String s : listName) {
			if ((s.lastIndexOf(findName) + findName.length()) == s.length() && s.lastIndexOf(findName) > 0
					&& s.charAt(s.lastIndexOf(findName) - 1) == ' ') {// neu findName nam o cuoi cung ten, va truoc do
																		// la 1 dau cach
				rs++;
			}
		}
		return rs;
	}

//5
public void sortName(String[] listName) {
		//doi thanh dinh danh ten-ho-dem
		for (int i = 0; i < listName.length; i++) {
			listName[i] = formatTenHoDem(listName[i]);
		}
		//sap xep
		for (int i = 0; i < listName.length - 1; i++) {
			for (int j = 0; j < listName.length - i - 1; j++) {
				if (compareString(listName[j], listName[j + 1]) > 0) {
					String temp = listName[j];
					listName[j] = listName[j + 1];
					listName[j + 1] = temp;
				}
			}
		}
		//doi lai ve ho dem ten
		for(int i = 0; i < listName.length; i++) {
			listName[i] = formatHoTenDem(listName[i]);
		}
	}

	public static int compareString(String s1, String s2) {
		for (int i = 0; i < s1.length() && i < s2.length(); i++) {
			if (s1.charAt(i) > s2.charAt(i))
				return 1;
			if (s1.charAt(i) < s2.charAt(i))
				return -1;
		}
		return s1.length() - s2.length();
	}

	public static String formatTenHoDem(String hotendem) {
		String rs = null;
		int i = hotendem.lastIndexOf(' ');
		rs = hotendem.substring(i + 1, hotendem.length()) + " " + hotendem.substring(0, i);
		return rs;
	}

	public static String formatHoTenDem(String tenhodem) {
		String rs = null;
		int i = tenhodem.indexOf(' ');
		rs = tenhodem.substring(i, tenhodem.length()) + " " + tenhodem.substring(0, i);
		return rs;
	}