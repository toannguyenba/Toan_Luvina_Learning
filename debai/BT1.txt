1. Mảng int [] A ={.....}; // Vòng while
   Tìm, in ra giá trị LN và tất cả các ví trị xuất hiện của nó theo các trường hợp sau
   Trường hợp 1: chí có 1 giá trị là LN thì in ra: Max=...
   Trường hợp 2: có nhiều 1 hơn 1 phần tử của mảng có giá trị bằng LN thì in ra như sau:
     Max=...; Soluong=...; cac vi tri= vt1, vt2, ....vtcuoi.
(Dùng mảng khác để lưu vị trí)

2. Cho mảng  int [] A ={.....}; // Vòng while 
 2.1. Xác định đoạn dài nhất chứa các phần tử liên tiếp tạo thành một dãy tăng dần, in ra màn hình vị trí đầu, vị trí cuối của đoạn đó
 2.2. Xác định tất cả các đoạn dài nhất chứa các phần tử liên tiếp tạo thành một dãy tăng dần, in ra màn hình các đoạn đó theo các trương hợp sau:
- Trường hợp 1: Chỉ có một đoạn thì in ra: Độ dài của đoạn =...; [đầu:..., cuối=...]
- Trường hợp 2: Có nhiều hơn một đoạn thì in ra: Số đoạn:=....; Độ dài của đoạn =...; {[đầu:..., cuối=...]; [đầu:..., cuối=...]; ....[đầu:..., cuối=...]}

3. Cho một giá trị int x=7 và một mảng  int [] A ={ 4, 6, 9, 10, 17, 22}; gồm các phần tử tạo thành 1 dãy tăng dần                     
Hãy bỏ phần tử cuối cùng của mảng A và chèn x vào mảng A để dãy kết quả nhận được là một dãy tăng dần.
 
4. Cho một giá trị int x và một mảng int [] A ={.....}; gồm các phần tử tạo thành 1 dãy tăng dần;
Thực hiện tìm kiếm nhị phân phần tử x trong mảng A.

5. Biến đổi mảng bằng cách thay giá trị max = giá trị min và ngược lại.
 
 Xâu kí tự:
1. Cho một xâu kí tự chứa họ đệm tên, có thể thừa một số dấu cách. Viết chương trình loại bỏ các dấu cách thừa. Ví dụ: "Nguyễn    Văn     A    "
2. Cho một xâu kí tự họ đệm tên. Viết chương trình tách riêng phần họ, đệm và tên.
3. Cho xâu kí tự. Viết chương trình tìm tất cả các từ dài nhất trong xâu (các từ cách nhau bởi dấu cách).
4. Cho một mảng chứa N phần tử là họ đệm tên của sinh viên. Viết chương trình đếm xem có bao nhiêu sinh viên tên Bình.
5. Cho một mảng chứa N phần tử là họ đệm tên của sinh viên. Hãy viết chương trình sắp xếp lại mảng theo thứ tự bảng chữ cái (tên họ đệm).

Luyện thêm các thuật toán sắp xếp
   


 
